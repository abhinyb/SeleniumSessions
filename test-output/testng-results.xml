<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-22T13:34:19 CST" name="Default suite" finished-at="2023-11-22T13:34:38 CST" duration-ms="18884">
    <groups>
    </groups>
    <test started-at="2023-11-22T13:34:19 CST" name="Default test" finished-at="2023-11-22T13:34:38 CST" duration-ms="18884">
      <class name="testNGSessionsLearning.DataProvidersTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:19 CST" name="setup" finished-at="2023-11-22T13:34:33 CST" duration-ms="13575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:33 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:34 CST" duration-ms="884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcccccc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testttt@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:34 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:35 CST" duration-ms="1540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcccccc1212@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testttt@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:35 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:36 CST" duration-ms="721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testttt@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:36 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:37 CST" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testtttt@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:37 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:38 CST" duration-ms="705" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[testtttt@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testtttt]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testNGSessionsLearning.DataProvidersTest.loginTest(DataProvidersTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:38 CST" name="loginTest" data-provider="getLoginNegativeData" finished-at="2023-11-22T13:34:38 CST" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[#@#@#@#@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdasdasd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="registerTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:38 CST" name="registerTest" data-provider="getRegTestData" finished-at="2023-11-22T13:34:38 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Heena]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Vaghela]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[heena@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9090909098]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[heena@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method signature="registerTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:38 CST" name="registerTest" data-provider="getRegTestData" finished-at="2023-11-22T13:34:38 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vinutha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ravindra]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vinu@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9090909099]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[vinu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method signature="registerTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:38 CST" name="registerTest" data-provider="getRegTestData" finished-at="2023-11-22T13:34:38 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supriya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bendukuri]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[supriya@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9090909088]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sup@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testNGSessionsLearning.DataProvidersTest@481a996b]" started-at="2023-11-22T13:34:38 CST" name="tearDown" finished-at="2023-11-22T13:34:38 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testNGSessionsLearning.DataProvidersTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
